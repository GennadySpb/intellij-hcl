<idea-plugin version="2">
  <id>org.intellij.plugins.hcl</id>
  <name>HCL language support</name>
  <version>0.6.2.dev</version>
  <vendor email="vlad.rassokhin+intellij+hcl@gmail.com" url="https://github.com/VladRassokhin">Vladislav Rassokhin</vendor>

  <description><![CDATA[
    This plugin adds support for <a href="https://github.com/hashicorp/hcl">HashiCorp Configuration Language (HCL)</a>
    and <a href="https://github.com/hashicorp/hil">HashiCorp Interpolation Language (HIL)</a> languages<br>

    And their combination, <a href="https://www.terraform.io/">Terraform</a> configuration files (.tf)<br>

    Also HCL format is used for <a href="https://www.nomadproject.io/">Nomad</a>(.nomad files).<br>
    <h3>Features:</h3>
    <h4>For file formats with HCL (.hcl, .tf, .nomad):</h4>
    <ul>
      <li>Syntax highlighting</li>
      <li>Structure outline in 'Structure' tool window</li>
      <li>Code formatter, so reformat code action available</li>
      <li>Code folding</li>
      <li>Comment/Uncomment action</li>
    </ul>
    <h4>HashiCorp Interpolation Language:</h4>
    <ul>
      <li>Syntax highlighting</li>
    </ul>
    <h3><a href="https://www.terraform.io/">Terraform</a> specific support:</h3>
    <h4>In both config and interpolations:</h4>
    <ul>
      <li>Autocompletion</li>
      <li>Find Usages / Go to definition for resources, providers, variables and their properties</li>
      <li>Rename Refactoring</li>
      <li>Introduce Variable Refactoring (for string property values)</li>
      <li>Several inspections</li>
      <li>Report usage of deprecated properties</li>
      <li>Unresolved reference checks (in interpolations)</li>
      <li>Check required/missing properties in resource/provider</li>
      <li><a href="https://www.terraform.io/docs/configuration/interpolation.html">Predefined Terraform methods</a> autocompletion in interpolations</li>

      <li>(WIP) Better properties validation (type checking)</li>
      <li>(WIP) Working with dependent modules</li>
      <li>(WIP) Type-specific autocompletion in interpolations</li>
    </ul>
    ]]></description>

  <change-notes><![CDATA[
    <h4>0.6.3 (UNRELEASED)</h4>
    <p>Support for `backend` blocks in `terraform` block</p>
    <p>Custom folding support: `region/endregion` and `&lt;editor-fold&gt;</p>
    <p>Required properties added automatically on resource/data type completion and in generators</p>
    <p>Smart completion in interpolations provides best suited results for some properties, e.g. vpc_id in aws resources</p>
    <p>Move statement up/down doesn't breaks syntax anymore</p>
    <p>Other improvements and bugfixes in completion</p>
    <h4>0.6.2</h4>
    <p>Support `${terraform.env}` interpolation</p>
    <p>Improve resolving for 'computed' map variables</p>
    <p>Updated model data to match Terraform v0.9.4</p>
    <h4>0.6.1</h4>
    <p>Added 'Add missing variable' quick fix</p>
    <p>Do not highlight terraform_remote_state parameters as missing</p>
    <p>Updated Terraform model data to match TF v0.9.3</p>
    <h4>0.6.0</h4>
    <p>Added 'Introduce Variable' refactoring (#50)</p>
    <p>Resource and Data Source completion variants for unused providers no longer shown in basic completion (#77)</p>
    <p>Added completion, Go To Definition and find usages from module 'source' property for relative path cases (#73)</p>
    <p>Updated terraform model data to match Terraform v0.9.0</p>
    <h4>0.5.12.2</h4>
    <p>Updated terraform model data to match Terraform v0.8.6</p>
    <p>Minor internal refactoring, plugin size reduced a bit</p>
    <h4>0.5.12.1</h4>
    <p>Support 'terraform' blocks in .tf files (#68)</p>
    <p>Updated terraform model data to match Terraform v0.8.4</p>
    <h4>0.5.12</h4>
    <p>Allow 'self' references in interpolation in resource connection blocks (#57)</p>
    <p>Support comparison and boolean operations in interpolation (#59)</p>
    <p>Report incorrect argument types for comparison, ternary and boolean operations in interpolations (simple cases only)</p>
    <p>Properly insert closing curve brace once interpolation start typed (#63)</p>
    <p>Fixed 'module' keyword highlighting and completion in interpolations (#62)</p>
    <p>Completion for module output in interpolations, module inputs no longer advised in interpolations completion (#52)</p>
    <p>Added completion for module parameters as well as 'missing parameter' inspection (#65, #66)</p>
    <p>Updated terraform model data to match Terraform v0.8.1</p>
    <h4>0.5.11.1</h4>
    <p>Fixed IAE (#55)</p>
    <p>Fixed incorrect backslash escape handling (#56)</p>
    <p>Removed Otto support since that tool was decommissioned</p>
    <h4>0.5.11</h4>
    <p>Support Terraform 0.8.0</p>
    <p>'Missing required property' inspection now ignores required properties with 'default' value. (#53)</p>
    <p>Multiline string literals supported only if there's interpolation inside.</p>
    <p>Backslash escaping changed in interpolations to match Terraform 0.8 style. <a href="https://github.com/hashicorp/hcl/pull/150">Details in HCL repo</a>.</p>
    <p>Do not highlight interpolation elements as unresolved reference for some holders, e.g. `VAR` in `data.consul.NAME.var.VAR` (#51)</p>
    <p>Updated terraform model data to match Terraform v0.8.0-rc1</p>
    <h4>0.5.10</h4>
    <p>'Copy Reference' action would copy FQN of resource, provider, etc. (#48)</p>
    <p>Updated terraform model data to match Terraform 0.7.5 (#49)</p>
    <h4>0.5.9</h4>
    <p>Updated terraform model data to match Terraform 0.7.4</p>
    <h4>0.5.8</h4>
    <p>Add references and completion variants for 'depends_on' in resources and data sources (#43)</p>
    <p>Updated terraform model data to match Terraform 0.7.2</p>
    <h4>0.5.7</h4>
    <p>Fixed incorrect inspection in .tfvars files for numeric values (#41)</p>
    <p>Fixed double quote inserter in Terraform files, now closing double quote would be added automatically if needed</p>
    <p>Improved missing properties generation in 'Missing required property' inspection based on expected property type</p>
    <p>Improved property name completion elements presentation</p>
    <p>Variable type could be autocompleted from three variants: string, list or map</p>
    <p>Variable type inspection (for 'type' and 'default' properties)</p>
    <p>Report duplicated providers with same name/alias as error</p>
    <p>Report usage of interpolations in variables, 'depends_on' and module source as error</p>
    <h4>0.5.6</h4>
    <p>Fixed incorrect inspection in .tfvars files (#39)</p>
    <p>Support references to elements of 'map' variables in .tfvars files (#41)</p>
    <p>Code completion in .tfvars files (#41)</p>
    <p>Support multiline interpolations in heredocs (#40)</p>
    <h4>0.5.5</h4>
    <p>Support Terraform 0.7.0 (issues: #31, #33, #36, #37)</p>
    <p>Updated terraform model data to match Terraform 0.7.0</p>
    <h4>0.5.4</h4>
    <p>Fixed error on rename refactoring (issue #29)</p>
    <p>Fixed parsing heredocs with indented end token (issue #30)</p>
    <p>Fixed interpolation escape (`$$`) (issue #34)</p>
    <p>Updated terraform model data to match Terraform 0.6.16</p>
    <h4>0.5.3</h4>
    <p>Updated terraform model data to match Terraform 0.6.15 (issue #28)</p>
    <h4>0.5.2</h4>
    <p>Updated terraform model data to match Terraform 0.6.14</p>
    <p>Support indented heredocs (issue #27)</p>
    <p>Support '.tfvars' files (issue #24)</p>
    <p>Fixed exception during formatting a .tf file with invalid syntax (issue #26)</p>
    <h4>0.5.1</h4>
    <p>Updated terraform model data to match Terraform 0.6.12</p>
    <p>Fix references to resource 'id' property reported as unresolved (issue #21)</p>
    <p>Fixes around unary operators in HIL</p>
    <p>Support indexing into variables in HIL ('${a[2]}') (issue #19)</p>
    <p>Various fixes</p>
    <h4>0.5.0</h4>
    <p>Customize highlighting text attributes (colour, etc)</p>
    <p>Improved Find Usages, Go to definition, Rename refactoring support.</p>
    <p>Support custom language injections in heredoc (issue #17)</p>
    <p>Added inspections in Terraform interpolations: incorrect use of 'self', 'unknown resource type', <b>'unresolved reference'</b></p>
    <p>Added actions into 'Generate ...' popup. Use with <code>alt+insert</code>(<code>ctrl+n</code> on OSX)</p>
    <h4>0.4.4</h4>
    <p>Added 'deprecated parameter or block type' inspection.</p>
    <p>Updated terraform model data to match Terraform 0.6.11</p>
    <p>Minor internal refactoring</p>
    <h4>0.4.3</h4>
    <p>Updated terraform model data to match Terraform 0.6.8</p>
    <h4>0.4.2</h4>
    <p>Fix false 'unknown block' inspection result (issue #12)</p>
    <p>Fix compatibility with non IDEA IDEs (issue #13)</p>
    <h4>0.4.1</h4>
    <p>Fix ClassCastException (issue #11)</p>
    <h4>0.4.0</h4>
    <p>Autocompletion in interpolations</p>
    <p>Go to definition from interpolations to provider/resources properties, etc.</p>
    <p>Find usages of provider/resources properties, etc. in interpolations</p>
    <p>Inplace properties renaming (with usages tracking)</p>
    <h4>Previous changes <a href="https://github.com/VladRassokhin/intellij-hcl/blob/master/ChangeLog.html">see in sources repository</a></h4>
    ]]>
  </change-notes>

  <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="141.3000"/>

  <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="org.intellij.plugins.hcl.HCLFileTypeFactory"/>
    <lang.parserDefinition language="HCL" implementationClass="org.intellij.plugins.hcl.HCLParserDefinition"/>

    <lang.syntaxHighlighterFactory key="HCL" implementationClass="org.intellij.plugins.hcl.HCLSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="org.intellij.plugins.hcl.HCLColorsPage"/>

    <!-- CodeInsight -->
    <completion.contributor language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.config.codeinsight.TerraformConfigCompletionContributor"/>
    <lang.foldingBuilder language="HCL" implementationClass="org.intellij.plugins.hcl.editor.HCLFoldingBuilder"/>
    <lang.commenter language="HCL" implementationClass="org.intellij.plugins.hcl.editor.HCLCommenter"/>
    <lang.psiStructureViewFactory language="HCL" implementationClass="org.intellij.plugins.hcl.structureView.HCLStructureViewFactory"/>
    <lang.braceMatcher language="HCL" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLBraceMatcher"/>
    <lang.findUsagesProvider language="HCL" implementationClass="org.intellij.plugins.hcl.findUsages.HCLFindUsagesProvider"/>
    <usageTypeProvider implementation="org.intellij.plugins.hcl.terraform.config.findUsages.HCLUsageTypeProvider"/>
    <breadcrumbsInfoProvider implementation="org.intellij.plugins.hcl.editor.HCLBreadcrumbsInfoProvider"/>
    <qualifiedNameProvider implementation="org.intellij.plugins.hcl.navigation.HCLQualifiedNameProvider"/>

    <!-- Annotators -->
    <annotator language="HCL" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLLiteralAnnotator"/>

    <!-- Manipulator for injections support -->
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLIdentifier"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLIdentifierManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLStringLiteral"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLStringLiteralManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLHeredocContent"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLHeredocContentManipulator"/>

    <!-- Refactoring support -->
    <lang.refactoringSupport language="HCL" implementationClass="org.intellij.plugins.hcl.psi.HCLRefactoringSupportProvider"/>
    <lang.refactoringSupport language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.psi.HCLRefactoringSupportProvider"/>

    <!-- Formatter -->
    <codeStyleSettingsProvider implementation="org.intellij.plugins.hcl.formatter.HCLCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="org.intellij.plugins.hcl.formatter.HCLLanguageCodeStyleSettingsProvider"/>
    <lang.formatter language="HCL" implementationClass="org.intellij.plugins.hcl.formatter.HCLFormattingBuilderModel"/>
    <lang.quoteHandler language="HCL" implementationClass="org.intellij.plugins.hcl.formatter.HCLQuoteHandler"/>

    <!-- Handles autoinsert '}' after '${' in string literals (Issue #63)-->
    <typedHandler implementation="org.intellij.plugins.hcl.terraform.config.editor.TerraformInterpolationStartTypedHandler"/>

    <!-- Terraform Interpolation language -->
    <lang.parserDefinition language="HIL" implementationClass="org.intellij.plugins.hil.HILParserDefinition"/>

    <lang.syntaxHighlighterFactory key="HIL" implementationClass="org.intellij.plugins.hil.HILSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="org.intellij.plugins.hil.HILColorPage"/>

    <!-- Annotators -->
    <annotator language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILVariableAnnotator"/>

    <!-- CodeInsight -->
    <lang.braceMatcher language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILBraceMatcher"/>
    <lang.quoteHandler language="HIL" implementationClass="org.intellij.plugins.hil.formatter.HILQuoteHandler"/>
    <lang.foldingBuilder language="HIL" implementationClass="org.intellij.plugins.hil.formatter.HILFoldingBuilder"/>
    <psi.referenceContributor language="HIL" implementation="org.intellij.plugins.hil.psi.ILReferenceContributor"/>
    <completion.contributor language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILCompletionContributor"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hil.psi.ILVariable"
                             implementationClass="org.intellij.plugins.hil.psi.ILVariableManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hil.psi.ILLiteralExpression"
                             implementationClass="org.intellij.plugins.hil.psi.ILLiteralExpressionManipulator"/>
    <!-- Refactoring support -->
    <lang.refactoringSupport language="HIL" implementationClass="org.intellij.plugins.hil.refactoring.ILRefactoringSupportProvider"/>

    <lang.findUsagesProvider language="HIL" implementationClass="org.intellij.plugins.hil.findUsages.HILFindUsagesProvider"/>
    <usageTypeProvider implementation="org.intellij.plugins.hil.findUsages.HILUsageTypeProvider"/>

    <!-- Inject TIL into TerraformConfig -->
    <languageInjector implementation="org.intellij.plugins.hil.ILLanguageInjector"/>

    <!-- Terraform Config language -->
    <fileTypeFactory implementation="org.intellij.plugins.hcl.terraform.config.TerraformFileTypeFactory"/>
    <lang.parserDefinition language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformParserDefinition"/>
    <lang.syntaxHighlighterFactory key="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformSyntaxHighlighterFactory"/>

    <!-- CodeInsight -->
    <!--<completion.contributor language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.codeinsight.TerraformConfigCompletionProvider"/>-->
    <lang.foldingBuilder language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.editor.HCLFoldingBuilder"/>
    <lang.commenter language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.editor.HCLCommenter"/>
    <!-- TODO: Better structure view provider-->
    <lang.psiStructureViewFactory language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.structureView.HCLStructureViewFactory"/>
    <lang.braceMatcher language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLBraceMatcher"/>
    <lang.findUsagesProvider language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.findUsages.TerraformFindUsagesProvider"/>
    <useScopeEnlarger implementation="org.intellij.plugins.hcl.terraform.config.OutputBlocksUseScopeEnlarger"/>

    <psi.referenceContributor language="HCL" implementation="org.intellij.plugins.hcl.terraform.config.psi.TerraformReferenceContributor"/>
    <lang.documentationProvider language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformDocumentationProvider"/>

    <statementUpDownMover implementation="org.intellij.plugins.hcl.terraform.HCLStatementMover" id="HCL_SM" order="before line"/>

    <!-- Formatter -->
    <codeStyleSettingsProvider implementation="org.intellij.plugins.hcl.terraform.config.formatter.TerraformCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="org.intellij.plugins.hcl.terraform.config.formatter.TerraformConfigCodeStyleSettingsProvider"/>
    <lang.formatter language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.formatter.TerraformFormattingBuilderModel"/>
    <lang.quoteHandler language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.formatter.HCLQuoteHandler"/>
     <!-- TODO: Better breadcrumbs provider-->

    <applicationService serviceInterface="org.intellij.plugins.hcl.terraform.config.model.TypeModelProvider" serviceImplementation="org.intellij.plugins.hcl.terraform.config.model.TypeModelProvider"/>

    <!-- Code Inspections -->
    <!-- HCL used instead HCL-Terraform, to apply to all psi elements. .hcl files filtered out in #buildVisito method -->
    <localInspection language="HCL" applyToDialects="true" shortName="HCLBlockMissingProperty" bundle="messages.HCLBundle"
                     key="missing.resource.property.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLBlockMissingPropertyInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLUnknownBlockType" bundle="messages.HCLBundle"
                     key="unknown.block.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLUnknownBlockTypeInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLDeprecatedElement" bundle="messages.HCLBundle"
                     key="deprecated.element.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLDeprecatedElementInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFVARSIncorrectElement" bundle="messages.HCLBundle"
                     key="tfvars.unsupported.element.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFVARSIncorrectElementInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFIncorrectVariableType" bundle="messages.HCLBundle"
                     key="incorrect.variable.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFIncorrectVariableTypeInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFDuplicatedProvider" bundle="messages.HCLBundle"
                     key="duplicated.provider.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFDuplicatedProviderInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFNoInterpolationsAllowed" bundle="messages.HCLBundle"
                     key="interpolations.not.allowed.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFNoInterpolationsAllowedInspection"/>

    <!-- HIL Inspections -->
    <localInspection language="HIL" applyToDialects="true" shortName="HILMissingSelfInContext" bundle="messages.HCLBundle"
                     key="hil.scope.not.available.in.context.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILMissingSelfInContextInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILUnknownResourceType" bundle="messages.HCLBundle"
                     key="hil.unknown.resource.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hil.inspection.HILUnknownResourceTypeReferencedInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILUnresolvedReference" bundle="messages.HCLBundle"
                     key="hil.unresolved.reference.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILUnresolvedReferenceInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILOperationTypesMismatch" bundle="messages.HCLBundle"
                     key="hil.operation-argument-type-mismatch.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILOperationTypesMismatchInspection"/>

    <!-- Terraform as Tool -->
    <projectService serviceImplementation="org.intellij.plugins.hcl.terraform.TerraformToolProjectSettings"/>
    <projectConfigurable groupId="tools" instance="org.intellij.plugins.hcl.terraform.TerraformToolConfigurable"
                         id="reference.settingsdialog.project.terraform"
                         key="terraform.name" bundle="messages.HCLBundle"/>
  </extensions>

  <application-components>
    <component>
      <implementation-class>org.intellij.plugins.hcl.UpdateComponent</implementation-class>
    </component>
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>

    <!-- Generate actions -->
    <group id="TF.GenerateGroup">
      <action id="GenerateTFProvider" text="Provider..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateProvider"/>
      <action id="GenerateTFResource" text="Resource..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateResource"/>
      <action id="GenerateTFDataSource" text="Data Source..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateDataSource"/>
      <action id="GenerateTFVariable" text="Variable..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateVariable"/>
      <action id="GenerateTFOutput" text="Output..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateOutput"/>
      <action id="GenerateTFModule" text="Module..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateModule"/>
      <!--<action id="GenerateTF" text="..." class=""/>-->
      <add-to-group group-id="GenerateGroup" anchor="first"/>
    </group>

  </actions>

</idea-plugin>
